// 질의 함수 바꾸기

const basePrice = this._quantity * this._itemPrice
if (basePrice > 1000) {
    return basePrice * 0.95
}
else {
    return basePrice * 0.98
}

//=>
get basePrice() { this._quantity * this._itemPrice }
if (this.basePrice > 1000) {
    return this.basePrice * 0.95
}
else {
    return this.basePrice * 0.98
}

// 절차
// 1. 변수가 사용되기 전에 값이 확실히 결정되는지, 변수를 사용할 때마다 게산 로직이 매번 다른 결과를 내는 지 확인
// 2. 읽기 전용으로 맏늘 수 있는 변수는 읽기 전용으로 만듬
// 3. 변수 대입문을 함수로 추출
// 4. 변수 인라인하기로 임시 변수를 제거

class Order {
    constructor(quantitiy, item) {
     this._quantity = quantitiy;
     this._item = item;   
    }
    get price() {
        const basePrice = this.basePrice
        // const basePrice = this._quantity * this._item.price
        const discountFactor = this.discountFactor
        // const discountFactor = 0.98;
    }
    get basePrice() {
        return this._quantity * this._item.price;
    }
    get discountFactor() {
        const discountFactor = 0.98;
        if (this.basePrice > 1000) discountFactor -= 0.03;
        return discountFactor
    }
    get price() {
        return this.basePrice * this.discountFactor;
    }
}

// 대입 변수인 basePrice를 discountFactor 메서드로 바꾸기
// 변수 인라인
// discountFactor도 마찬가지로 처리, 함수 추출하기