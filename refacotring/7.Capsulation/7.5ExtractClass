// 클래스 추출하기

class Person {
    get officeAreaCode() { return this._officeAreaCode}
    get officeNumber() { return this._officeNumber}
}

// =>
class Person {
    get officeAreaCode() { return this._telephoneNumber.areaCode}
    get officeNumber() { return this._telephoneNumber.number}
}
class TelephoneNumber {
    get areaCode() { return this._areaCode}
    get number() { return this._number}
}

//클래스의 역할을 분리할 방법을 정합니다.
// 분리될 역할을 담당할 클래스를 새로 만듭니다.
// 원래 클래스 생성자에서 새로운 클래스의 인스턴스를 생성하여 필드에 저장해둡니다
// 분리될 역할에 필요한 필드들을 새 클래스로 옮깁니다.  하나씩 옮길때마다 테스트
// 메서드들도 새 클래스로 옮깁니다. 이때 저수준 메서드, 즉 다른 메서드를 호출하기보다는 호출을 당하는 일이 많은 메서드를 옮깁니다
// 양쪽 클래스의 인터페이스를 살펴보면서 불필요한 메서드를 제거하고, 이름도 새로운 환경에 맞게 바꾸
// 새클래스를 외부로 노출할지 정함, 노출하려거든 새 클래스에 참조를 값으로 바꾸기글 적용할지 고민

class Person2 {
    get name() { return this._name}
    set name(arg) { this._name = arg }

    this._telephoneNumber = new TelephoneNumber()

    get telephoneNumber() { return }
    // get officeAreaCode() { return}
    // set officeAreaCode(arg) { this._officeAreaCode = arg}
    get officeNumber() { return this._telephoneNumber.officeNumber}
    set officeNumber(arg) { this._thisphoneNumber.officeNumber = arg;}
}

// 전화번호 관련 동작을 별도 클래스로 뽑기
// Person 클래스의 인스턴스를 생성할 때 전화번호 인스턴스도 함께 생성
class TelephoneNumber {
    get officeAreaCode() { return}
    set officeAreaCode(arg) { this._officeAreaCode = arg}
}